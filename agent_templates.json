{
    "QueryInitialCheck": {
        "SYSTEM_PROMPT_TEMPLATES": {
            "unstructured": "You are a helpful assistant",
            "structured": "You are a helpful assistant that outputs strictly in valid JSON format. Your response must follow this schema: { \"dataset\": \"string\", \"metadate\": [{ \"metadata1\": integer, \"metadata2\": \"string\" }] } Do not include any markdown formatting, code blocks, or text outside of the JSON. Ensure the JSON is valid and does not contain comments or trailing commas."
        },
        "PROMPT_TEMPLATES": {
            "InstructionBased": "Summarize the following in 3 bullet points, The summarization should perfectly include user needs and expand central keywords: {input}",
            "FewShot": "Extract the user duration of podcast and subject. Examples: {should add examples} \n Now Extract: {input}",
            "ChainOfThoughts": "For this user input {input}, First identify the relevant kind of content it wants, episode, or a podcast show, then understand what duration it needs to be.",
            "PersonaPattern": "You are a professional summarizer and best at extracting the person's needs: {input}",
            "AudiencePattern": "Generate a response to the user as if they were looking for a podcast and in a style that fits their language: {input}",
            "QuestionRefinementPattern": "In this chat use the Question Refinement Pattern: {input}"
        }
    },
    "UserProcessing": {
        "SYSTEM_PROMPT_TEMPLATES": {
            "unstructured": "You are a helpful assistant",
            "structured": "You are a helpful assistant that outputs strictly in valid JSON format. Your response must follow this schema: { \"dataset\": \"string\", \"metadate\": [{ \"metadata1\": integer, \"metadata2\": \"string\" }] } Do not include any markdown formatting, code blocks, or text outside of the JSON. Ensure the JSON is valid and does not contain comments or trailing commas."
        },
        "PROMPT_TEMPLATES": {
            "InstructionBased": "Summarize the following in 3 bullet points, The summarization should perfectly include user needs and expand central keywords: {input}",
            "FewShot": "Extract the user duration of podcast and subject. Examples: {should add examples} \n Now Extract: {input}",
            "ChainOfThoughts": "For this user input {input}, First identify the relevant kind of content it wants, episode, or a podcast show, then understand what duration it needs to be.",
            "PersonaPattern": "You are a professional summarizer and best at extracting the person's needs: {input}",
            "AudiencePattern": "Generate a response to the user as if they were looking for a podcast and in a style that fits their language: {input}",
            "QuestionRefinementPattern": "In this chat use the Question Refinement Pattern: {input}"
        }
    },
    "SearchFilters": {
        "SYSTEM_PROMPT_TEMPLATES": {
            "unstructured": "You are a helpful assistant",
            "structured": "You are a helpful assistant that help me analyze user prompt to details and outputs strictly in valid JSON format. Your response must follow this schema: { dataset: string, recommendation_amount: integer, duration_range_bottom: integer or null, duration_range_top: integer or null }. The user should ask for podcast show, shows or episode, episodes. You need to infer and fill the schema in the following way. The 'dataset' value should be either 'podcast', 'episodes', or 'both', understand from user prompt if he is looking for podcast (show) or specific episode about a topic or both. If the user prompt does not specify an episode duration preference, set duration_range_bottom and duration_range_top to null. recommendation_amount - understand how much recommendations the user looking for based on the user prompt, needs to be an int number. duration_range_bottom: if episodes dataset chosen, understand an approximation of the minimum duration of the episode that the user want in minutes. duration_range_top: if episodes dataset chosen, understand an approximation of maximum duration the of episode that the user want in minutes. Do not include any markdown formatting, code blocks, or any text outside of the JSON. Ensure the JSON is valid and does not contain comments or trailing commas."
        },
        "PROMPT_TEMPLATES": {
            "InstructionBased": "Summarize the following in 3 bullet points, The summarization should perfectly include user needs and expand central keywords: {input}",
            "FewShot": "Examples: Example 1: Input: 'I want 3 podcast shows about health and wellness.' Output: {{ dataset: podcast, recommendation_amount: 3, duration_range_bottom: null, duration_range_top: null }}\n Example 2: Input: 'I want to here about bitcoin.' Output: {{ dataset: both, recommendation_amount: 1, duration_range_bottom: 5, duration_range_top: 150 }}\n Example 3: Input: 'I want good finance talking to hear in my way to work tomorrow.' Output: {{ dataset: episodes, recommendation_amount: 1, duration_range_bottom: 10, duration_range_top: 60 }}\n Example 4: Input: 'I need fast review on rag .' Output: {{ dataset: episodes, recommendation_amount: 1, duration_range_bottom: 0, duration_range_top: 10 }}\n Now extract for: {input}",
            "PersonaPattern": "You are a professional summarizer and best at extracting the person's needs: {input}",
            "AudiencePattern": "Generate a response to the user as if they were looking for a podcast and in a style that fits their language: {input}",
            "QuestionRefinementPattern": "In this chat use the Question Refinement Pattern: {input}"
        }
    },

    "NeedUnderstanding": {
        "SYSTEM_PROMPT_TEMPLATES": {
            "unstructured": "You are a helpful assistant",
            "structured": "You are a helpful assistant that help me analyze user prompt to details and outputs strictly in valid JSON format. Your response must follow this schema: { dataset: string, recommendation_amount: integer, duration_range_bottom: integer or null, duration_range_top: integer or null }. The user should ask for podcast show, shows or episode, episodes. You need to infer and fill the schema in the following way. The 'dataset' value should be either 'podcast', 'episodes', or 'both', understand from user prompt if he is looking for podcast (show) or specific episode about a topic or both. If the user prompt does not specify an episode duration preference, set duration_range_bottom and duration_range_top to null. recommendation_amount - understand how much recommendations the user looking for based on the user prompt, needs to be an int number. duration_range_bottom: if episodes dataset chosen, understand an approximation of the minimum duration of the episode that the user want in minutes. duration_range_top: if episodes dataset chosen, understand an approximation of maximum duration the of episode that the user want in minutes. Do not include any markdown formatting, code blocks, or any text outside of the JSON. Ensure the JSON is valid and does not contain comments or trailing commas."
        },
        "PROMPT_TEMPLATES": {
            "InstructionBased": "Summarize the following in 3 bullet points, The summarization should perfectly include user needs and expand central keywords: {input}",
            "FewShot": "Extract the user duration of podcast and subject. Examples: {should add examples} \n Now Extract: {input}",
            "ChainOfThoughts": "For this user input {input}, First identify the relevant kind of content it wants, episode, or a podcast show, then understand what duration it needs to be.",
            "PersonaPattern": "You are a professional summarizer and best at extracting the person's needs: {input}",
            "AudiencePattern": "Generate a response to the user as if they were looking for a podcast and in a style that fits their language: {input}",
            "QuestionRefinementPattern": "In this chat use the Question Refinement Pattern: {input}"
        }
    },
    "ResponseGeneration": {
        "SYSTEM_PROMPT_TEMPLATES": {
            "unstructured": "You are a helpful assistant",
            "structured": "You are a helpful assistant that outputs strictly in valid JSON format. Your response must follow this schema: { \"dataset\": \"string\", \"metadate\": [{ \"metadata1\": integer, \"metadata2\": \"string\" }] } Do not include any markdown formatting, code blocks, or text outside of the JSON. Ensure the JSON is valid and does not contain comments or trailing commas."
        },
        "PROMPT_TEMPLATES": {
            "InstructionBased": "Summarize the following in 3 bullet points, The summarization should perfectly include user needs and expand central keywords: {input}",
            "FewShot": "Extract the user duration of podcast and subject. Examples: {should add examples} \n Now Extract: {input}",
            "ChainOfThoughts": "For this user input {input}, First identify the relevant kind of content it wants, episode, or a podcast show, then understand what duration it needs to be.",
            "PersonaPattern": "You are a professional summarizer and best at extracting the person's needs: {input}",
            "AudiencePattern": "Generate a response to the user as if they were looking for a podcast and in a style that fits their language: {input}",
            "QuestionRefinementPattern": "In this chat use the Question Refinement Pattern: {input}"
        }
    },
    "Supervision": {
        "SYSTEM_PROMPT_TEMPLATES": {
            "unstructured": "You are a helpful assistant",
            "structured": "You are a helpful assistant that outputs strictly in valid JSON format. Your response must follow this schema: { \"dataset\": \"string\", \"metadate\": [{ \"metadata1\": integer, \"metadata2\": \"string\" }] } Do not include any markdown formatting, code blocks, or text outside of the JSON. Ensure the JSON is valid and does not contain comments or trailing commas."
        },
        "PROMPT_TEMPLATES": {
            "InstructionBased": "Summarize the following in 3 bullet points, The summarization should perfectly include user needs and expand central keywords: {input}",
            "FewShot": "Extract the user duration of podcast and subject. Examples: {should add examples} \n Now Extract: {input}",
            "ChainOfThoughts": "For this user input {input}, First identify the relevant kind of content it wants, episode, or a podcast show, then understand what duration it needs to be.",
            "PersonaPattern": "You are a professional summarizer and best at extracting the person's needs: {input}",
            "AudiencePattern": "Generate a response to the user as if they were looking for a podcast and in a style that fits their language: {input}",
            "QuestionRefinementPattern": "In this chat use the Question Refinement Pattern: {input}"
        }
    }
}
